// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  email        String         @unique
  records      HealthRecord[]
  meals        MealHistory[]
  exercises    ExerciseRecord[]
  diaries      Diary[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model HealthRecord {
  id                Int       @id @default(autoincrement())
  date              DateTime
  type              String // Could be " Weight", "Body Fat"
  weight            Float
  bodyFatPercentage Float
  userId            Int
  user              User      @relation(fields: [userId], references: [id])
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model MealHistory {
  id            Int      @id @default(autoincrement())
  date          DateTime
  mealDescription String
  calories      Int
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ExerciseRecord {
  id                  Int      @id @default(autoincrement())
  date                DateTime
  exerciseDescription String
  duration            Int      // Duration in minutes
  intensity           String   // Could be 'Low', 'Medium', 'High'
  calories            Int
  userId              Int
  user                User     @relation(fields: [userId], references: [id])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Diary {
  id        Int      @id @default(autoincrement())
  date      DateTime
  entry     String
  mood      String   // Could be 'Happy', 'Sad', 'Neutral'
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}